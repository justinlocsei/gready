{
  "review": {
    "body": "\n      \"Read Harry Potter!\" they said. \"It'll be fun!\" they said. \"Our childhood was built on Harry Potter!\" they said.<br /><br />WELL YOUR CHILDHOODS WERE ALL HORRIBLE. OMG WHAT IS THIS BOOK? WHAT IS THIS MESS I'M IN?? Excuse me, but that large salty lake where my life used to be is my <i>tears</i>. <b>Yes, yes, this means...</b>\n  ",
    "book": {
      "authors": {
        "author": {
          "average_rating": "4.45",
          "id": "1077326",
          "image_url": {
            "$": {
              "nophoto": "false"
            },
            "_": "\nhttps://images.gr-assets.com/authors/1510435123p5/1077326.jpg\n"
          },
          "link": "https://www.goodreads.com/author/show/1077326.J_K_Rowling",
          "name": "J.K. Rowling",
          "ratings_count": "23622053",
          "role": "",
          "small_image_url": {
            "$": {
              "nophoto": "false"
            },
            "_": "\nhttps://images.gr-assets.com/authors/1510435123p2/1077326.jpg\n"
          },
          "text_reviews_count": "560154"
        }
      },
      "average_rating": "4.57",
      "description": "When Harry Potter and the Half-Blood Prince opens, the war against Voldemort has begun. The Wizarding world has split down the middle, and as the casualties mount, the effects even spill over onto the Muggles. Dumbledore is away from Hogwarts for long periods, and the Order of the Phoenix has suffered grievous losses. And yet, as in all wars, life goes on.<br /><br />Harry, Ron, and Hermione, having passed their O.W.L. level exams, start on their specialist N.E.W.T. courses. Sixth-year students learn to Apparate, losing a few eyebrows in the process. Teenagers flirt and fight and fall in love. Harry becomes captain of the Gryffindor Quidditch team, while Draco Malfoy pursues his own dark ends. And classes are as fascinating and confounding as ever, as Harry receives some extraordinary help in Potions from the mysterious Half-Blood Prince.<br /><br />Most importantly, Dumbledore and Harry work together to uncover the full and complex story of a boy once named Tom Riddle—the boy who became Lord Voldemort. Like Harry, he was the son of one Muggle-born and one Wizarding parent, raised unloved, and a speaker of Parseltongue. But the similarities end there, as the teenaged Riddle became deeply interested in the Dark objects known as Horcruxes: objects in which a wizard can hide part of his soul, if he dares splinter that soul through murder.<br /><br />Harry must use all the tools at his disposal to draw a final secret out of one of Riddle’s teachers, the sly Potions professor Horace Slughorn. Finally Harry and Dumbledore hold the key to the Dark Lord’s weaknesses... until a shocking reversal exposes Dumbledore’s own vulnerabilities, and casts Harry’s—and Hogwarts’s—future in shadow.<br /><br />Source: <a target=\"_blank\" href=\"http://harrypotter.scholastic.com\" rel=\"nofollow\">http://harrypotter.scholastic.com</a>",
      "edition_information": "",
      "format": "Paperback",
      "id": {
        "$": {
          "type": "integer"
        },
        "_": "1"
      },
      "image_url": "https://i.gr-assets.com/images/S/compressed.photo.goodreads.com/books/1361039191l/1._SX98_.jpg",
      "isbn": "0439785960",
      "isbn13": "9780439785969",
      "large_image_url": "",
      "link": "https://www.goodreads.com/book/show/1.Harry_Potter_and_the_Half_Blood_Prince",
      "num_pages": "652",
      "publication_day": "16",
      "publication_month": "9",
      "publication_year": "2006",
      "published": "2006",
      "publisher": "Scholastic Inc.",
      "ratings_count": "2234273",
      "small_image_url": "https://i.gr-assets.com/images/S/compressed.photo.goodreads.com/books/1361039191l/1._SY75_.jpg",
      "text_reviews_count": {
        "$": {
          "type": "integer"
        },
        "_": "27341"
      },
      "title": "Harry Potter and the Half-Blood Prince (Harry Potter, #6)",
      "title_without_series": "Harry Potter and the Half-Blood Prince",
      "uri": "kca://book/amzn1.gr.book.v1.L9KPn9NQyHxsNneS-mDWAg",
      "work": {
        "id": "41335427",
        "uri": "kca://work/amzn1.gr.work.v1.txipecnIYua0HbI4GhIAkA"
      }
    },
    "comments": {
      "$": {
        "end": "50",
        "start": "1",
        "total": "188"
      },
      "comment": [
        {
          "body": "THANK YOOOOOOOU. Ron seriously rubs me the wrong way.",
          "created_at": "Tue Nov 10 05:27:04 -0800 2015",
          "id": "142625534",
          "updated_at": "Tue Nov 10 05:27:04 -0800 2015",
          "user": {
            "display_name": "Christina",
            "has_image": "true",
            "id": "8619016",
            "image_url": "https://images.gr-assets.com/users/1518581606p3/8619016.jpg",
            "link": "https://www.goodreads.com/user/show/8619016-christina",
            "location": "",
            "name": "Christina",
            "small_image_url": "https://images.gr-assets.com/users/1518581606p2/8619016.jpg",
            "uri": "kca://profile:goodreads/A2H1QB6J6K4BQQ"
          }
        },
        {
          "body": "@Christina: GOOD. Not just me. *collapses in relief*",
          "created_at": "Tue Nov 10 12:33:43 -0800 2015",
          "id": "142642717",
          "updated_at": "Tue Nov 10 12:33:43 -0800 2015",
          "user": {
            "display_name": "C.G. Drews",
            "has_image": "true",
            "id": "11375137",
            "image_url": "https://images.gr-assets.com/users/1521552918p3/11375137.jpg",
            "link": "https://www.goodreads.com/user/show/11375137-c-g-drews",
            "location": "Australia",
            "name": "C.G.",
            "small_image_url": "https://images.gr-assets.com/users/1521552918p2/11375137.jpg",
            "uri": "kca://profile:goodreads/A1UA9MBJBBHZ7P"
          }
        },
        {
          "body": "Nobody likes Ron lol",
          "created_at": "Tue Nov 10 13:56:08 -0800 2015",
          "id": "142646274",
          "updated_at": "Tue Nov 10 13:56:08 -0800 2015",
          "user": {
            "display_name": "Carrie",
            "has_image": "true",
            "id": "5693716",
            "image_url": "https://images.gr-assets.com/users/1372552764p3/5693716.jpg",
            "link": "https://www.goodreads.com/user/show/5693716-carrie",
            "location": "",
            "name": "Carrie",
            "small_image_url": "https://images.gr-assets.com/users/1372552764p2/5693716.jpg",
            "uri": "kca://profile:goodreads/A2R19GFS9QPODF"
          }
        },
        {
          "body": "We're both reading this series for the first time at the same time. LOVE IT.",
          "created_at": "Wed Nov 11 09:26:47 -0800 2015",
          "id": "142680440",
          "updated_at": "Wed Nov 11 09:26:47 -0800 2015",
          "user": {
            "display_name": "Ashley Elliott",
            "has_image": "true",
            "id": "20783666",
            "image_url": "https://images.gr-assets.com/users/1442987711p3/20783666.jpg",
            "link": "https://www.goodreads.com/user/show/20783666-ashley-elliott",
            "location": "The United States",
            "name": "Ashley",
            "small_image_url": "https://images.gr-assets.com/users/1442987711p2/20783666.jpg",
            "uri": "kca://profile:goodreads/AWKSN7R51IFEE"
          }
        },
        {
          "body": "I hated Snape too, until Book 7. Just you wait, Cait. Hey that rhymes.",
          "created_at": "Sun Nov 15 02:04:15 -0800 2015",
          "id": "142840464",
          "updated_at": "Sun Nov 15 02:04:15 -0800 2015",
          "user": {
            "display_name": "Bee",
            "has_image": "true",
            "id": "9639554",
            "image_url": "https://images.gr-assets.com/users/1577959325p3/9639554.jpg",
            "link": "https://www.goodreads.com/user/show/9639554-bee",
            "location": "Belgium",
            "name": "Bee",
            "small_image_url": "https://images.gr-assets.com/users/1577959325p2/9639554.jpg",
            "uri": "kca://profile:goodreads/ABM5DAE1OF94D"
          }
        },
        {
          "body": "I am actually with you in the hate for both Ron and Snape and for me that did not change through the book 7. I actually hated Ron more and did not find the reasons given for Snape and his behavior in any way or form okay. I am waiting until you start 7 and your rants that I hope will come because those are just one of my loves. Is that strange?",
          "created_at": "Sun Nov 15 02:22:36 -0800 2015",
          "id": "142840669",
          "updated_at": "Sun Nov 15 02:22:36 -0800 2015",
          "user": {
            "display_name": "Dawnie",
            "has_image": "true",
            "id": "36293066",
            "image_url": "https://images.gr-assets.com/users/1464172620p3/36293066.jpg",
            "link": "https://www.goodreads.com/user/show/36293066-dawnie",
            "location": "Germany",
            "name": "Dawnie",
            "small_image_url": "https://images.gr-assets.com/users/1464172620p2/36293066.jpg",
            "uri": "kca://profile:goodreads/A2XHPEXD30S3VV"
          }
        },
        {
          "body": "I get your hate for Snape. I was there as well. But wait for next book and for THE twist of all twists ;-)",
          "created_at": "Sun Nov 15 02:36:05 -0800 2015",
          "id": "142840823",
          "updated_at": "Sun Nov 15 02:36:05 -0800 2015",
          "user": {
            "display_name": "Lucia",
            "has_image": "true",
            "id": "8837962",
            "image_url": "https://images.gr-assets.com/users/1484242793p3/8837962.jpg",
            "link": "https://www.goodreads.com/user/show/8837962-lucia",
            "location": "Prague, Czech Republic",
            "name": "Lucia",
            "small_image_url": "https://images.gr-assets.com/users/1484242793p2/8837962.jpg",
            "uri": "kca://profile:goodreads/ABTB0YA46L7IF"
          }
        },
        {
          "body": "Snape is awful, I agree. Also yes,romance is not JKR's strong suit at all, I thyink it's common knowledge among the HP fans.",
          "created_at": "Sun Nov 15 02:47:13 -0800 2015",
          "id": "142840950",
          "updated_at": "Sun Nov 15 02:47:13 -0800 2015",
          "user": {
            "display_name": "Ritta",
            "has_image": "true",
            "id": "22604051",
            "image_url": "https://images.gr-assets.com/users/1396036295p3/22604051.jpg",
            "link": "https://www.goodreads.com/user/show/22604051-ritta",
            "location": "",
            "name": "Ritta",
            "small_image_url": "https://images.gr-assets.com/users/1396036295p2/22604051.jpg",
            "uri": "kca://profile:goodreads/A1S0H76AXCNY1B"
          }
        },
        {
          "body": "Haha. I was,like, PRESIDENT of the Snape Hate Club until I read Book 7. I still don't like him, but I definitely don't hate him as much. I hope you read The Deathly Hallows soon because it will DESTROY you (not that, you know, I want you destroyed. Your fabulousness is needed in this world) :P",
          "created_at": "Sun Nov 15 03:14:46 -0800 2015",
          "id": "142841308",
          "updated_at": "Sun Nov 15 03:14:46 -0800 2015",
          "user": {
            "display_name": "Ranu",
            "has_image": "true",
            "id": "36627561",
            "image_url": "https://images.gr-assets.com/users/1460963430p3/36627561.jpg",
            "link": "https://www.goodreads.com/user/show/36627561-ranu",
            "location": "Sri Jayawardenepura, Sri Lanka",
            "name": "Ranu",
            "small_image_url": "https://images.gr-assets.com/users/1460963430p2/36627561.jpg",
            "uri": "kca://profile:goodreads/A1W8WKBNE2LWCZ"
          }
        },
        {
          "body": "Have you heard Stephen Fry's version of the audio books? Absolutely the BEST thing ever. &lt;3",
          "created_at": "Sun Nov 15 03:30:52 -0800 2015",
          "id": "142841522",
          "updated_at": "Sun Nov 15 03:30:52 -0800 2015",
          "user": {
            "display_name": "Kara",
            "has_image": "true",
            "id": "3655826",
            "image_url": "https://images.gr-assets.com/users/1418125531p3/3655826.jpg",
            "link": "https://www.goodreads.com/user/show/3655826-kara",
            "location": "",
            "name": "Kara",
            "small_image_url": "https://images.gr-assets.com/users/1418125531p2/3655826.jpg",
            "uri": "kca://profile:goodreads/A2HEI49UZU1Y6P"
          }
        },
        {
          "body": "I love Ginny! She was so misrepresented in the movie and they stripped away all her cool parts, but she's AWESOME in the books! She was always one of my favorite characters. And just seeing Snape's name mentioned gives me bad feelings. Yes, there's a twist in book 7, but he is SO not the hero people make him out to be. I don't even care about the end of book 6 or what happens in book 7, because he was an asshole WAY before that. I mean it's a bit of a double standard, because I love Draco's character later on (he's a stupid bully too, but I feel like he hopefully he learned from his mistakes?), because I could see him redeeming himself. At least he was still a child, whereas Snape is an ADULT and a TEACHER in a position of power over his students. And you can't say oh no he only bullied Harry because of his trauma induced by Harry's father. Like, just look at how he treats Neville - what has Neville ever done to him other than trying his best!? I was bullied in school too; it's not an excuse for being a jerk as an adult. Also, other readons in book 7, but I don't want to spoil you any more than you've already been spoiled. xD I'm so glad you're loving the books! I totally understand what you mean about Voldemort, I was a little disappointed by that too. And I like Ron, but I see what you mean! He does have a lot of good sides, but it ISN'T okay to bully smaller students. <br /><br />Iirc, I think the theory behind the food is that you can transform it, but not conjure it out of thin air. So she probably already had the ingredients and everything for the onion soup? I'd have to reread it! Maybe she was making them peel sprouts because she thought some manual labour would do them some good haha. Also, if it was before they were 17, they wouldn't have been allowed to do magic outside of school, so maybe that's why. <br /><br />Sorry for the long comment; I have a lot of feelings about Harry Potter haha.",
          "created_at": "Sun Nov 15 04:17:40 -0800 2015",
          "id": "142842221",
          "updated_at": "Sun Nov 15 04:17:40 -0800 2015",
          "user": {
            "display_name": "Vlora",
            "has_image": "true",
            "id": "28886009",
            "image_url": "https://images.gr-assets.com/users/1547041291p3/28886009.jpg",
            "link": "https://www.goodreads.com/user/show/28886009-vlora",
            "location": "",
            "name": "Vlora",
            "small_image_url": "https://images.gr-assets.com/users/1547041291p2/28886009.jpg",
            "uri": "kca://profile:goodreads/A1XMH1I2X43X57"
          }
        },
        {
          "body": "Did I read that right, Cait? You LOVED this book?! Really?! And you cried?! I didn't think you cried at books? I know this sounds awful, BUT THIS MAKES ME SO HAPPY! Yaaay, you're kind of like a fan now! And is this is how you reacted to this book, I'm so excited to see how you react to Deathly Hallows! Oooh, you really make me want to re-read!",
          "created_at": "Sun Nov 15 04:48:22 -0800 2015",
          "id": "142842662",
          "updated_at": "Sun Nov 15 04:48:22 -0800 2015",
          "user": {
            "display_name": "Joanne",
            "has_image": "true",
            "id": "2084265",
            "image_url": "https://images.gr-assets.com/users/1251997295p3/2084265.jpg",
            "link": "https://www.goodreads.com/user/show/2084265-joanne",
            "location": "London, H9, The United Kingdom",
            "name": "Joanne",
            "small_image_url": "https://images.gr-assets.com/users/1251997295p2/2084265.jpg",
            "uri": "kca://profile:goodreads/A3VSMCOFSZ8W06"
          }
        },
        {
          "body": "This was an awesome reveiw- though I like the fifth book much more, I love how in book #6all the detail she's put in over the last five books begin to culminate. I don't hate Ron... but he does have issues. Same with snape. And book seven really brings it all together. I'm glad you liked it :)",
          "created_at": "Sun Nov 15 04:57:01 -0800 2015",
          "id": "142842810",
          "updated_at": "Sun Nov 15 04:57:01 -0800 2015",
          "user": {
            "display_name": "Shanti",
            "has_image": "true",
            "id": "26976114",
            "image_url": "https://images.gr-assets.com/users/1456470093p3/26976114.jpg",
            "link": "https://www.goodreads.com/user/show/26976114-shanti",
            "location": "",
            "name": "Shanti",
            "small_image_url": "https://images.gr-assets.com/users/1456470093p2/26976114.jpg",
            "uri": "kca://profile:goodreads/AQ5DJMQWDKI3W"
          }
        },
        {
          "body": "Is it mean of me to be happy this book ruined you? Because I am :P <br />Snape... is complicated. Reserve full judgment until the end of bk 7. Yes, he is never truly redeemed, but I actually totally understand Harry naming his son after him (but I seem to be one of the few).<br />As for Ron, he's got issues (and they multiply before they're solved), but I love him. He's a work in progress and he does fix himself, though Hermione definitely pushes him in the right direction lol These two are actually my first ship ever, since bk 1 when I was about nine! :D",
          "created_at": "Sun Nov 15 05:23:14 -0800 2015",
          "id": "142843322",
          "updated_at": "Sun Nov 15 05:23:14 -0800 2015",
          "user": {
            "display_name": "Nitzan Schwarz",
            "has_image": "true",
            "id": "8122395",
            "image_url": "https://images.gr-assets.com/users/1360442843p3/8122395.jpg",
            "link": "https://www.goodreads.com/user/show/8122395-nitzan-schwarz",
            "location": "Modiin, Israel",
            "name": "Nitzan",
            "small_image_url": "https://images.gr-assets.com/users/1360442843p2/8122395.jpg",
            "uri": "kca://profile:goodreads/A24RE9LZ3AT0DL"
          }
        },
        {
          "body": "Yes! Ginny is awesome!!! Ron is a jerk but… where would Harry be without him??? Have you seen the movies, Cait??",
          "created_at": "Sun Nov 15 05:59:21 -0800 2015",
          "id": "142844269",
          "updated_at": "Sun Nov 15 05:59:21 -0800 2015",
          "user": {
            "display_name": "Traci",
            "has_image": "false",
            "id": "48780644",
            "image_url": "https://s.gr-assets.com/assets/nophoto/user/u_111x148-9394ebedbb3c6c218f64be9549657029.png",
            "link": "https://www.goodreads.com/user/show/48780644-traci",
            "location": "The United States",
            "name": "Traci",
            "small_image_url": "https://s.gr-assets.com/assets/nophoto/user/u_50x66-632230dc9882b4352d753eedf9396530.png",
            "uri": "kca://profile:goodreads/AEW0WY6QR1XML"
          }
        },
        {
          "body": "SOOOOO glad you loved it in the end! :D",
          "created_at": "Sun Nov 15 06:28:16 -0800 2015",
          "id": "142845076",
          "updated_at": "Sun Nov 15 06:28:16 -0800 2015",
          "user": {
            "display_name": "Liv ",
            "has_image": "true",
            "id": "47140848",
            "image_url": "https://images.gr-assets.com/users/1570702419p3/47140848.jpg",
            "link": "https://www.goodreads.com/user/show/47140848-liv",
            "location": "",
            "name": "Liv ",
            "small_image_url": "https://images.gr-assets.com/users/1570702419p2/47140848.jpg",
            "uri": "kca://profile:goodreads/A35K410HUJNSIO"
          }
        },
        {
          "body": "OMFG LOL laughing so hard at this review",
          "created_at": "Sun Nov 15 07:13:02 -0800 2015",
          "id": "142846424",
          "updated_at": "Sun Nov 15 07:13:02 -0800 2015",
          "user": {
            "display_name": "Deyse ",
            "has_image": "true",
            "id": "35357631",
            "image_url": "https://images.gr-assets.com/users/1546231710p3/35357631.jpg",
            "link": "https://www.goodreads.com/user/show/35357631-deyse",
            "location": "Brazil",
            "name": "Deyse ",
            "small_image_url": "https://images.gr-assets.com/users/1546231710p2/35357631.jpg",
            "uri": "kca://profile:goodreads/A150E0PNOTJ4JS"
          }
        },
        {
          "body": "<i>Deyse wrote: \"OMFG LOL laughing so hard at this review\"</i><br /><br />And about the loathes:<br />1. I think they can use magic to DO the food but not to magically get the ingredients, like they need to have the ingredients to make a onion soup to actually make that.<br /><br />2. Because the potion would just be at the same level if someone didn't drink, it was magically something to obliged someone to get weak so it wouldn't get to the horcrux, that was why he needed Harry there, to get the horcrux when he was to weak after drinking the potion. <br /><br />3. Just read book seven. You will cry probably and everything will make sense. Also he named his kid after Snape because he was one of the bravest wizards of his time not because he was good, there is a difference there.<br /><br />Aaand about Ron, you will probably want to kill him on book seven (I did and I liked him) but I swear there is some character development is store for him so that may diminish your angryness towards him. Or not. <br /><br />Happy reading, can't wait to see your reaction to book seven!",
          "created_at": "Sun Nov 15 07:44:21 -0800 2015",
          "id": "142847485",
          "updated_at": "Sun Nov 15 07:44:21 -0800 2015",
          "user": {
            "display_name": "Deyse ",
            "has_image": "true",
            "id": "35357631",
            "image_url": "https://images.gr-assets.com/users/1546231710p3/35357631.jpg",
            "link": "https://www.goodreads.com/user/show/35357631-deyse",
            "location": "Brazil",
            "name": "Deyse ",
            "small_image_url": "https://images.gr-assets.com/users/1546231710p2/35357631.jpg",
            "uri": "kca://profile:goodreads/A150E0PNOTJ4JS"
          }
        },
        {
          "body": "Ha, I don't know if my emotions were QUITE as strong as yours, but I agree XD",
          "created_at": "Sun Nov 15 07:45:12 -0800 2015",
          "id": "142847519",
          "updated_at": "Sun Nov 15 07:45:12 -0800 2015",
          "user": {
            "display_name": "Emma",
            "has_image": "true",
            "id": "39979689",
            "image_url": "https://images.gr-assets.com/users/1557432689p3/39979689.jpg",
            "link": "https://www.goodreads.com/user/show/39979689-emma",
            "location": "",
            "name": "Emma",
            "small_image_url": "https://images.gr-assets.com/users/1557432689p2/39979689.jpg",
            "uri": "kca://profile:goodreads/A3DLDSM6W4XLS9"
          }
        },
        {
          "body": "I can't wait to hear how much you hate Snape after book 7 lol",
          "created_at": "Sun Nov 15 08:45:56 -0800 2015",
          "id": "142849707",
          "updated_at": "Sun Nov 15 08:45:56 -0800 2015",
          "user": {
            "display_name": "Erica",
            "has_image": "true",
            "id": "40111391",
            "image_url": "https://images.gr-assets.com/users/1549058763p3/40111391.jpg",
            "link": "https://www.goodreads.com/user/show/40111391-erica",
            "location": "",
            "name": "Erica",
            "small_image_url": "https://images.gr-assets.com/users/1549058763p2/40111391.jpg",
            "uri": "kca://profile:goodreads/AE76N1Q9BBMHY"
          }
        },
        {
          "body": "Lol! I'm with Erica. I felt the same way about Snape until book 7. =D",
          "created_at": "Sun Nov 15 08:51:19 -0800 2015",
          "id": "142849895",
          "updated_at": "Sun Nov 15 08:51:19 -0800 2015",
          "user": {
            "display_name": "Hannah Heath",
            "has_image": "true",
            "id": "48039868",
            "image_url": "https://images.gr-assets.com/users/1531155475p3/48039868.jpg",
            "link": "https://www.goodreads.com/user/show/48039868-hannah-heath",
            "location": "Carlsbad, CA",
            "name": "Hannah",
            "small_image_url": "https://images.gr-assets.com/users/1531155475p2/48039868.jpg",
            "uri": "kca://profile:goodreads/AA6GA6X9N0VR6"
          }
        },
        {
          "body": "ISN'T THE AUDIO FABULOUS?!?! That's how I read the series for the first time, with the audio and reading along so my six-year-old self could learn how to read big books and not be freaked out by them, and I luuuuurved it. So so much.<br /><br />But omg just you wait until book 7.",
          "created_at": "Sun Nov 15 12:36:02 -0800 2015",
          "id": "142858983",
          "updated_at": "Sun Nov 15 12:36:02 -0800 2015",
          "user": {
            "display_name": "Kate I. Foley",
            "has_image": "true",
            "id": "26228739",
            "image_url": "https://images.gr-assets.com/users/1537044745p3/26228739.jpg",
            "link": "https://www.goodreads.com/user/show/26228739-kate-i-foley",
            "location": "The United States",
            "name": "Kate",
            "small_image_url": "https://images.gr-assets.com/users/1537044745p2/26228739.jpg",
            "uri": "kca://profile:goodreads/A1QQCVGQ1XVK3G"
          }
        },
        {
          "body": "@Dawnie: haah I'm looking forward to my Snape rants too actually. XD Like I <i>thought</i> I might feel a bit softer towards him since he was bullied -- but there CAN BE NO REASON IN THE ENTIRE UNIVERSE THAT HE KILLED [INSERT BELOVED CHARACTER HERE] AND IT BE OKAY. NO . NO.NO.",
          "created_at": "Sun Nov 15 12:54:59 -0800 2015",
          "id": "142859923",
          "updated_at": "Sun Nov 15 12:54:59 -0800 2015",
          "user": {
            "display_name": "C.G. Drews",
            "has_image": "true",
            "id": "11375137",
            "image_url": "https://images.gr-assets.com/users/1521552918p3/11375137.jpg",
            "link": "https://www.goodreads.com/user/show/11375137-c-g-drews",
            "location": "Australia",
            "name": "C.G.",
            "small_image_url": "https://images.gr-assets.com/users/1521552918p2/11375137.jpg",
            "uri": "kca://profile:goodreads/A1UA9MBJBBHZ7P"
          }
        },
        {
          "body": "@Ranu: Omg you are just waiting for me to collapse into an even DEEPER PUDDLE OF TEARS. When I have a breakdown I BLAME YOU. XDDX",
          "created_at": "Sun Nov 15 12:55:36 -0800 2015",
          "id": "142859948",
          "updated_at": "Sun Nov 15 12:55:36 -0800 2015",
          "user": {
            "display_name": "C.G. Drews",
            "has_image": "true",
            "id": "11375137",
            "image_url": "https://images.gr-assets.com/users/1521552918p3/11375137.jpg",
            "link": "https://www.goodreads.com/user/show/11375137-c-g-drews",
            "location": "Australia",
            "name": "C.G.",
            "small_image_url": "https://images.gr-assets.com/users/1521552918p2/11375137.jpg",
            "uri": "kca://profile:goodreads/A1UA9MBJBBHZ7P"
          }
        },
        {
          "body": "@Kara: Oh really?!?! I got told to go for Jim Dale and he was AAAAMAZING. &lt;3 Considering Stephan Fry for Deathly Hallows though because that's the only one my library has. *collapses*",
          "created_at": "Sun Nov 15 12:56:16 -0800 2015",
          "id": "142859980",
          "updated_at": "Sun Nov 15 12:56:16 -0800 2015",
          "user": {
            "display_name": "C.G. Drews",
            "has_image": "true",
            "id": "11375137",
            "image_url": "https://images.gr-assets.com/users/1521552918p3/11375137.jpg",
            "link": "https://www.goodreads.com/user/show/11375137-c-g-drews",
            "location": "Australia",
            "name": "C.G.",
            "small_image_url": "https://images.gr-assets.com/users/1521552918p2/11375137.jpg",
            "uri": "kca://profile:goodreads/A1UA9MBJBBHZ7P"
          }
        },
        {
          "body": "@Vlora: Pfft, never apologise for awesome comments. xD I know a LOT of spoilers so I know <a class=\"jsShowSpoiler spoilerAction\">(view spoiler)</a><span class=\"spoilerContainer\" style=\"display: none\">[ Harry dies (at least...I think he does) and I know he's a horcrux and I know Dobby dies and I know Snape is \"redeemable\" but pfft, let me choke on my sprout soup. <a class=\"jsHideSpoiler spoilerAction\">(hide spoiler)</a>]</span> I think bullying is NEVER okay. Never eeever ever. Particularly when it's someone in a position of authority and they're just flexing their \"power\" by tyranny. THAT'S EVIL. <br />Ohhh, that makes kinda sense. Although Dumbledore conjured drinks out of the air when he went to get Harry from the Dursely's??? And he conjured drinks a LOT but then Slughorn had bottles of mead and so did Trawlaney...SO I DON'T EVEN KNOW. I IS CONFUSED.",
          "created_at": "Sun Nov 15 12:59:09 -0800 2015",
          "id": "142860135",
          "updated_at": "Sun Nov 15 12:59:09 -0800 2015",
          "user": {
            "display_name": "C.G. Drews",
            "has_image": "true",
            "id": "11375137",
            "image_url": "https://images.gr-assets.com/users/1521552918p3/11375137.jpg",
            "link": "https://www.goodreads.com/user/show/11375137-c-g-drews",
            "location": "Australia",
            "name": "C.G.",
            "small_image_url": "https://images.gr-assets.com/users/1521552918p2/11375137.jpg",
            "uri": "kca://profile:goodreads/A1UA9MBJBBHZ7P"
          }
        },
        {
          "body": "@Joanne: I KNOOOOOW RIGHT?!?!? Although, I mean, I cry on the <i>inside</i>, heheh, because I'm so Vulcan. BUT YEAH. OMG I LOVED IT.<br /><br />@Shanti: So basically I need to read book 7 asap and get to the bottom of all these mysteries right?!? :P",
          "created_at": "Sun Nov 15 13:00:22 -0800 2015",
          "id": "142860205",
          "updated_at": "Sun Nov 15 13:00:22 -0800 2015",
          "user": {
            "display_name": "C.G. Drews",
            "has_image": "true",
            "id": "11375137",
            "image_url": "https://images.gr-assets.com/users/1521552918p3/11375137.jpg",
            "link": "https://www.goodreads.com/user/show/11375137-c-g-drews",
            "location": "Australia",
            "name": "C.G.",
            "small_image_url": "https://images.gr-assets.com/users/1521552918p2/11375137.jpg",
            "uri": "kca://profile:goodreads/A1UA9MBJBBHZ7P"
          }
        },
        {
          "body": "@Denyse: Ohhh, that makes sense about the food. Except how could Dumbledore just conjure up drinks? Like when he got Harry from the Dursely's, he just conjured mead out of the air.",
          "created_at": "Sun Nov 15 13:01:42 -0800 2015",
          "id": "142860270",
          "updated_at": "Sun Nov 15 13:01:42 -0800 2015",
          "user": {
            "display_name": "C.G. Drews",
            "has_image": "true",
            "id": "11375137",
            "image_url": "https://images.gr-assets.com/users/1521552918p3/11375137.jpg",
            "link": "https://www.goodreads.com/user/show/11375137-c-g-drews",
            "location": "Australia",
            "name": "C.G.",
            "small_image_url": "https://images.gr-assets.com/users/1521552918p2/11375137.jpg",
            "uri": "kca://profile:goodreads/A1UA9MBJBBHZ7P"
          }
        },
        {
          "body": "Don't you even start on Snape!!! Otherwise we can't be friends and we can't talk and that would be very sad...",
          "created_at": "Sun Nov 15 13:01:52 -0800 2015",
          "id": "142860278",
          "updated_at": "Sun Nov 15 13:01:52 -0800 2015",
          "user": {
            "display_name": "Lauren",
            "has_image": "true",
            "id": "23857337",
            "image_url": "https://images.gr-assets.com/users/1545038325p3/23857337.jpg",
            "link": "https://www.goodreads.com/user/show/23857337-lauren",
            "location": "",
            "name": "Lauren",
            "small_image_url": "https://images.gr-assets.com/users/1545038325p2/23857337.jpg",
            "uri": "kca://profile:goodreads/A2WOWRA5XFYJAV"
          }
        },
        {
          "body": "@Traci: I haven't seen the movies yet!! GOING TO.",
          "created_at": "Sun Nov 15 13:02:08 -0800 2015",
          "id": "142860293",
          "updated_at": "Sun Nov 15 13:02:08 -0800 2015",
          "user": {
            "display_name": "C.G. Drews",
            "has_image": "true",
            "id": "11375137",
            "image_url": "https://images.gr-assets.com/users/1521552918p3/11375137.jpg",
            "link": "https://www.goodreads.com/user/show/11375137-c-g-drews",
            "location": "Australia",
            "name": "C.G.",
            "small_image_url": "https://images.gr-assets.com/users/1521552918p2/11375137.jpg",
            "uri": "kca://profile:goodreads/A1UA9MBJBBHZ7P"
          }
        },
        {
          "body": "Wait,<br />You haven't seen the movies either??!!?!! What planet have you been banished to?!<br /><br />Someone probably already told you this, and I'm not about to read the zillions of comments, but Dumbledore couldn't have poured the potion on the ground. Against the rules, wouldn't have worked.<br /><br />And calm down about Snape! You will understand, in time. For now, just try to think of the heartache he has endured. That could ruin anyone.",
          "created_at": "Sun Nov 15 19:16:09 -0800 2015",
          "id": "142878742",
          "updated_at": "Sun Nov 15 19:16:09 -0800 2015",
          "user": {
            "display_name": "Carrie",
            "has_image": "true",
            "id": "5693716",
            "image_url": "https://images.gr-assets.com/users/1372552764p3/5693716.jpg",
            "link": "https://www.goodreads.com/user/show/5693716-carrie",
            "location": "",
            "name": "Carrie",
            "small_image_url": "https://images.gr-assets.com/users/1372552764p2/5693716.jpg",
            "uri": "kca://profile:goodreads/A2R19GFS9QPODF"
          }
        },
        {
          "body": "hehehe glad you're in an emotional pain like the rest of potterheads after reading this ;) Well about food, there's the rule about magic that it's impossible to create food out of nothing, so yes they cooked every food in the story. And Dumbledore couldn't pour the potion to the ground because it wouldn't worked. And Tom Riddle is cold and blahblahblah because he was supposed to be concieved under love potion influence, which made him heartless (if that does made any sense??)<br /><br />Just be prepared for more deaths in the next book ;)",
          "created_at": "Mon Nov 16 05:36:55 -0800 2015",
          "id": "142891909",
          "updated_at": "Mon Nov 16 05:36:55 -0800 2015",
          "user": {
            "display_name": "Tasya Dita",
            "has_image": "true",
            "id": "14507734",
            "image_url": "https://images.gr-assets.com/users/1464101912p3/14507734.jpg",
            "link": "https://www.goodreads.com/user/show/14507734-tasya-dita",
            "location": "Jakarta, Indonesia",
            "name": "Tasya",
            "small_image_url": "https://images.gr-assets.com/users/1464101912p2/14507734.jpg",
            "uri": "kca://profile:goodreads/A1S3OZ8Y14533I"
          }
        },
        {
          "body": "@Carrie: I HAVE BEEN LIVING IN NARNIA!!! I had a fabulous childhood there ;) heheh<br /><br />@Tasya: YES I HAVE JOINED THE RANKS OF WAILING. How come Dumbledore could always pull drinks out of the air? Like he pulled mead out of the air when he went to the Dursley's house?",
          "created_at": "Mon Nov 16 11:55:40 -0800 2015",
          "id": "142908320",
          "updated_at": "Mon Nov 16 11:55:40 -0800 2015",
          "user": {
            "display_name": "C.G. Drews",
            "has_image": "true",
            "id": "11375137",
            "image_url": "https://images.gr-assets.com/users/1521552918p3/11375137.jpg",
            "link": "https://www.goodreads.com/user/show/11375137-c-g-drews",
            "location": "Australia",
            "name": "C.G.",
            "small_image_url": "https://images.gr-assets.com/users/1521552918p2/11375137.jpg",
            "uri": "kca://profile:goodreads/A1UA9MBJBBHZ7P"
          }
        },
        {
          "body": "Nope, Snape didn't get much better for me in book 7. All I got was pity. There are no excuses for the way he treats the children supposedly under his care, even if he is pretending to be a baddy. NOPE.<br /><br />Ps I thought Harry/Ginny was so cute in the books but SO SO AWKWARD in the films. So there's that to look forward to, haha.",
          "created_at": "Mon Nov 16 14:43:18 -0800 2015",
          "id": "142916356",
          "updated_at": "Mon Nov 16 14:43:18 -0800 2015",
          "user": {
            "display_name": "Anika Claire",
            "has_image": "true",
            "id": "5948834",
            "image_url": "https://images.gr-assets.com/users/1466509355p3/5948834.jpg",
            "link": "https://www.goodreads.com/user/show/5948834-anika-claire",
            "location": "Brisbane, Australia",
            "name": "Anika",
            "small_image_url": "https://images.gr-assets.com/users/1466509355p2/5948834.jpg",
            "uri": "kca://profile:goodreads/AXHI6WX5ZVP89"
          }
        },
        {
          "body": "Yay, you LOVED IT!!! Ah, Ginny and Dumbledore and Harry are my faves!! Snape is just ... :P I agree. He was never completely redeemed in my eyes. But just wait. Book 7 will blow your socks off!!",
          "created_at": "Mon Nov 16 18:14:30 -0800 2015",
          "id": "142925754",
          "updated_at": "Mon Nov 16 18:14:30 -0800 2015",
          "user": {
            "display_name": "Ally (The Scribbling Sprite)",
            "has_image": "true",
            "id": "36978618",
            "image_url": "https://images.gr-assets.com/users/1530134931p3/36978618.jpg",
            "link": "https://www.goodreads.com/user/show/36978618-ally-the-scribbling-sprite",
            "location": "The United States",
            "name": "Ally",
            "small_image_url": "https://images.gr-assets.com/users/1530134931p2/36978618.jpg",
            "uri": "kca://profile:goodreads/A3LWDXWDU8N6RY"
          }
        },
        {
          "body": "Good to see JKR got to your head to. And it doesn't matter that it's 10 or so years later...Harry Potter is just like money..never late!! Lol<br /><br />Ok so you probably got your answers already but<br />1. You can't create food by magic. If you are able to visualize it's source then you can conjure it or bring it to you. <br /><br />2. The spell cast on the poison potion didn't allow the easy road for the person trying to get to it. <br /><br />3. Snape isn't good and he knows he isn't good and he wasn't trying to be good. His actions had ulterior motives. Keep that in mind. Next book you will hate him less. Or pity him. Whichever. <br /><br />I have a 'meh' feeling when it comes to Ron. His actions were definitely for attention and he was a toddler when it comes to Hermione. Picking on a girl because he likes her. For shame! <br /><br />I agree with all your loathe points and I also disagree because of the unbearable guilt I feel for agreeing with you. <br /><br />Also VOLDEMORT (cause I aknf afraid to Say his name) = awesome!!",
          "created_at": "Mon Nov 16 19:37:28 -0800 2015",
          "id": "142929410",
          "updated_at": "Mon Nov 16 19:37:28 -0800 2015",
          "user": {
            "display_name": "Krys",
            "has_image": "true",
            "id": "28227299",
            "image_url": "https://images.gr-assets.com/users/1467334081p3/28227299.jpg",
            "link": "https://www.goodreads.com/user/show/28227299-krys",
            "location": "Nassau, 23, Bahamas",
            "name": "Krys",
            "small_image_url": "https://images.gr-assets.com/users/1467334081p2/28227299.jpg",
            "uri": "kca://profile:goodreads/A2KLX6QMG5EF3M"
          }
        },
        {
          "body": "I am LOVING your reviews for this series, Cait! <br /><br />I actually haven't been able to listen to the audio for the final two books (they're always checked out at the library! grrr!) but I LOVE the way Jim Dale reads. (He also reads The Night Circus if you're interested in that.)",
          "created_at": "Tue Nov 17 06:49:25 -0800 2015",
          "id": "142946253",
          "updated_at": "Tue Nov 17 06:49:25 -0800 2015",
          "user": {
            "display_name": "Ashley *Hufflepuff Kitten*",
            "has_image": "true",
            "id": "29787548",
            "image_url": "https://images.gr-assets.com/users/1471208025p3/29787548.jpg",
            "link": "https://www.goodreads.com/user/show/29787548-ashley-hufflepuff-kitten",
            "location": "",
            "name": "Ashley *Hufflepuff Kitten*",
            "small_image_url": "https://images.gr-assets.com/users/1471208025p2/29787548.jpg",
            "uri": "kca://profile:goodreads/AGSFOUIYR3MD0"
          }
        },
        {
          "body": "^^He narrates the Night Circus?! That's awesome! I love that book.",
          "created_at": "Tue Nov 17 12:48:22 -0800 2015",
          "id": "142960464",
          "updated_at": "Tue Nov 17 12:48:22 -0800 2015",
          "user": {
            "display_name": "Ally (The Scribbling Sprite)",
            "has_image": "true",
            "id": "36978618",
            "image_url": "https://images.gr-assets.com/users/1530134931p3/36978618.jpg",
            "link": "https://www.goodreads.com/user/show/36978618-ally-the-scribbling-sprite",
            "location": "The United States",
            "name": "Ally",
            "small_image_url": "https://images.gr-assets.com/users/1530134931p2/36978618.jpg",
            "uri": "kca://profile:goodreads/A3LWDXWDU8N6RY"
          }
        },
        {
          "body": "@Ashley: YES YES I AM ABSOLUTELY GOING TO TRY HIS NIGHT CIRCUS AJFDKLSAD I AM EXCITED FOR IT",
          "created_at": "Tue Nov 17 13:06:45 -0800 2015",
          "id": "142961277",
          "updated_at": "Tue Nov 17 13:06:45 -0800 2015",
          "user": {
            "display_name": "C.G. Drews",
            "has_image": "true",
            "id": "11375137",
            "image_url": "https://images.gr-assets.com/users/1521552918p3/11375137.jpg",
            "link": "https://www.goodreads.com/user/show/11375137-c-g-drews",
            "location": "Australia",
            "name": "C.G.",
            "small_image_url": "https://images.gr-assets.com/users/1521552918p2/11375137.jpg",
            "uri": "kca://profile:goodreads/A1UA9MBJBBHZ7P"
          }
        },
        {
          "body": "This is so interesting to watch you read the books for the first time as an adult!! Because I read them as a kid (I was 8 when I first read Half Blood prince) I didn't even pick up on most of what you said, good or bad. If anything I idolised the trio (especially hermione) because they were older than me.<br />Even as a 9 year old, Snape's twist\" in Deathly Hallows made me cry haha! I can't wait to see what you think!",
          "created_at": "Tue Nov 17 14:11:25 -0800 2015",
          "id": "142964395",
          "updated_at": "Tue Nov 17 14:11:25 -0800 2015",
          "user": {
            "display_name": "Ally May",
            "has_image": "true",
            "id": "31485336",
            "image_url": "https://images.gr-assets.com/users/1409453143p3/31485336.jpg",
            "link": "https://www.goodreads.com/user/show/31485336-ally-may",
            "location": "Melbourne, Australia",
            "name": "Ally",
            "small_image_url": "https://images.gr-assets.com/users/1409453143p2/31485336.jpg",
            "uri": "kca://profile:goodreads/A3IR9LHHZZ6L8N"
          }
        },
        {
          "body": "Is everybody still against Draco????",
          "created_at": "Wed Nov 18 15:56:15 -0800 2015",
          "id": "143015925",
          "updated_at": "Wed Nov 18 15:56:15 -0800 2015",
          "user": {
            "display_name": "Traci",
            "has_image": "false",
            "id": "48780644",
            "image_url": "https://s.gr-assets.com/assets/nophoto/user/u_111x148-9394ebedbb3c6c218f64be9549657029.png",
            "link": "https://www.goodreads.com/user/show/48780644-traci",
            "location": "The United States",
            "name": "Traci",
            "small_image_url": "https://s.gr-assets.com/assets/nophoto/user/u_50x66-632230dc9882b4352d753eedf9396530.png",
            "uri": "kca://profile:goodreads/AEW0WY6QR1XML"
          }
        },
        {
          "body": "Sorry Cait Grace.",
          "created_at": "Wed Nov 18 16:14:19 -0800 2015",
          "id": "143016513",
          "updated_at": "Wed Nov 18 16:14:19 -0800 2015",
          "user": {
            "display_name": "Traci",
            "has_image": "false",
            "id": "48780644",
            "image_url": "https://s.gr-assets.com/assets/nophoto/user/u_111x148-9394ebedbb3c6c218f64be9549657029.png",
            "link": "https://www.goodreads.com/user/show/48780644-traci",
            "location": "The United States",
            "name": "Traci",
            "small_image_url": "https://s.gr-assets.com/assets/nophoto/user/u_50x66-632230dc9882b4352d753eedf9396530.png",
            "uri": "kca://profile:goodreads/AEW0WY6QR1XML"
          }
        },
        {
          "body": "How do you write a frickin review??",
          "created_at": "Wed Nov 18 16:37:37 -0800 2015",
          "id": "143017139",
          "updated_at": "Wed Nov 18 16:37:37 -0800 2015",
          "user": {
            "display_name": "Traci",
            "has_image": "false",
            "id": "48780644",
            "image_url": "https://s.gr-assets.com/assets/nophoto/user/u_111x148-9394ebedbb3c6c218f64be9549657029.png",
            "link": "https://www.goodreads.com/user/show/48780644-traci",
            "location": "The United States",
            "name": "Traci",
            "small_image_url": "https://s.gr-assets.com/assets/nophoto/user/u_50x66-632230dc9882b4352d753eedf9396530.png",
            "uri": "kca://profile:goodreads/AEW0WY6QR1XML"
          }
        },
        {
          "body": "FINALLY. Someone who doesn't like Ron or Snape!! They annoy the living daylight outta me",
          "created_at": "Thu Nov 19 02:33:24 -0800 2015",
          "id": "143035374",
          "updated_at": "Thu Nov 19 02:33:24 -0800 2015",
          "user": {
            "display_name": "Chey",
            "has_image": "true",
            "id": "5447363",
            "image_url": "https://images.gr-assets.com/users/1403181276p3/5447363.jpg",
            "link": "https://www.goodreads.com/user/show/5447363-chey",
            "location": "",
            "name": "Chey",
            "small_image_url": "https://images.gr-assets.com/users/1403181276p2/5447363.jpg",
            "uri": "kca://profile:goodreads/A11ZFLFGIUTO56"
          }
        },
        {
          "body": "@Cheyenne: HUZZAH. I shall stand in the Ron/Snape hating corner with you. XD",
          "created_at": "Thu Nov 19 11:57:37 -0800 2015",
          "id": "143053156",
          "updated_at": "Thu Nov 19 11:57:37 -0800 2015",
          "user": {
            "display_name": "C.G. Drews",
            "has_image": "true",
            "id": "11375137",
            "image_url": "https://images.gr-assets.com/users/1521552918p3/11375137.jpg",
            "link": "https://www.goodreads.com/user/show/11375137-c-g-drews",
            "location": "Australia",
            "name": "C.G.",
            "small_image_url": "https://images.gr-assets.com/users/1521552918p2/11375137.jpg",
            "uri": "kca://profile:goodreads/A1UA9MBJBBHZ7P"
          }
        },
        {
          "body": "Neville Longbottom is the biggest badass in the last movie tho. In the book too. x)",
          "created_at": "Thu Nov 19 12:01:51 -0800 2015",
          "id": "143053354",
          "updated_at": "Thu Nov 19 12:01:51 -0800 2015",
          "user": {
            "display_name": "Bee",
            "has_image": "true",
            "id": "9639554",
            "image_url": "https://images.gr-assets.com/users/1577959325p3/9639554.jpg",
            "link": "https://www.goodreads.com/user/show/9639554-bee",
            "location": "Belgium",
            "name": "Bee",
            "small_image_url": "https://images.gr-assets.com/users/1577959325p2/9639554.jpg",
            "uri": "kca://profile:goodreads/ABM5DAE1OF94D"
          }
        },
        {
          "body": "I hated snap until later but I've always hated Ron and he's never treated Hermione like the lady she was.",
          "created_at": "Thu Nov 19 12:46:49 -0800 2015",
          "id": "143055226",
          "updated_at": "Thu Nov 19 12:46:49 -0800 2015",
          "user": {
            "display_name": "Crystal Wilkinson",
            "has_image": "true",
            "id": "48116255",
            "image_url": "https://images.gr-assets.com/users/1472406020p3/48116255.jpg",
            "link": "https://www.goodreads.com/user/show/48116255-crystal-wilkinson",
            "location": "The United States",
            "name": "Crystal",
            "small_image_url": "https://images.gr-assets.com/users/1472406020p2/48116255.jpg",
            "uri": "kca://profile:goodreads/AEKQMVFNNFS2O"
          }
        },
        {
          "body": "Haha, this was a really amusing review to read. Don't change.",
          "created_at": "Sun Jan 10 17:14:53 -0800 2016",
          "id": "145793759",
          "updated_at": "Sun Jan 10 17:14:53 -0800 2016",
          "user": {
            "display_name": "Captherine ✪",
            "has_image": "true",
            "id": "20787898",
            "image_url": "https://images.gr-assets.com/users/1481131921p3/20787898.jpg",
            "link": "https://www.goodreads.com/user/show/20787898-captherine",
            "location": "",
            "name": "Captherine ✪",
            "small_image_url": "https://images.gr-assets.com/users/1481131921p2/20787898.jpg",
            "uri": "kca://profile:goodreads/A1T2TN9IUQR3UK"
          }
        },
        {
          "body": "@Ketti: Why thank you. ;)",
          "created_at": "Sun Jan 10 21:25:44 -0800 2016",
          "id": "145805639",
          "updated_at": "Sun Jan 10 21:25:44 -0800 2016",
          "user": {
            "display_name": "C.G. Drews",
            "has_image": "true",
            "id": "11375137",
            "image_url": "https://images.gr-assets.com/users/1521552918p3/11375137.jpg",
            "link": "https://www.goodreads.com/user/show/11375137-c-g-drews",
            "location": "Australia",
            "name": "C.G.",
            "small_image_url": "https://images.gr-assets.com/users/1521552918p2/11375137.jpg",
            "uri": "kca://profile:goodreads/A1UA9MBJBBHZ7P"
          }
        },
        {
          "body": "It was never about romance, not that she's bad at that.",
          "created_at": "Mon Jan 11 09:43:07 -0800 2016",
          "id": "145827330",
          "updated_at": "Mon Jan 11 09:43:07 -0800 2016",
          "user": {
            "display_name": "Lauma",
            "has_image": "true",
            "id": "8681481",
            "image_url": "https://images.gr-assets.com/users/1525245550p3/8681481.jpg",
            "link": "https://www.goodreads.com/user/show/8681481-lauma",
            "location": "Riga, Latvia",
            "name": "Lauma",
            "small_image_url": "https://images.gr-assets.com/users/1525245550p2/8681481.jpg",
            "uri": "kca://profile:goodreads/A150KU1AQI46O"
          }
        }
      ]
    },
    "comments_count": "188",
    "date_added": "Mon Jan 20 02:11:37 -0800 2014",
    "date_updated": "Thu Nov 19 13:35:34 -0800 2015",
    "id": "829021593",
    "link": "https://www.goodreads.com/review/show/829021593",
    "owned": "0",
    "rating": "5",
    "read_at": "Sun Nov 15 14:58:27 -0800 2015",
    "read_count": "1",
    "read_statuses": {
      "read_status": [
        {
          "comments_count": "0",
          "id": {
            "$": {
              "type": "integer"
            },
            "_": "1073259869"
          },
          "old_status": "currently-reading",
          "ratings_count": "0",
          "status": "read",
          "updated_at": {
            "$": {
              "type": "datetime"
            },
            "_": "Sun Nov 15 01:33:24 -0800 2015"
          }
        },
        {
          "comments_count": "2",
          "id": {
            "$": {
              "type": "integer"
            },
            "_": "1062671289"
          },
          "old_status": "to-read",
          "ratings_count": "8",
          "status": "currently-reading",
          "updated_at": {
            "$": {
              "type": "datetime"
            },
            "_": "Thu Nov 05 17:32:44 -0800 2015"
          }
        },
        {
          "comments_count": "0",
          "id": {
            "$": {
              "type": "integer"
            },
            "_": "288580355"
          },
          "old_status": "",
          "ratings_count": "0",
          "status": "to-read",
          "updated_at": {
            "$": {
              "type": "datetime"
            },
            "_": "Mon Jan 20 02:11:37 -0800 2014"
          }
        }
      ]
    },
    "recommended_by": "",
    "recommended_for": "",
    "shelves": {
      "shelf": [
        {
          "$": {
            "exclusive": "true",
            "id": "37312854",
            "name": "read",
            "review_shelf_id": ""
          }
        },
        {
          "$": {
            "exclusive": "false",
            "id": "73185037",
            "name": "5-star",
            "review_shelf_id": "1131567989",
            "sortable": "false"
          }
        },
        {
          "$": {
            "exclusive": "false",
            "id": "37314470",
            "name": "young-adult",
            "review_shelf_id": "1131568024",
            "sortable": "false"
          }
        },
        {
          "$": {
            "exclusive": "false",
            "id": "159893516",
            "name": "audio-books",
            "review_shelf_id": "1135258929",
            "sortable": "false"
          }
        },
        {
          "$": {
            "exclusive": "false",
            "id": "70656396",
            "name": "magical-fantasy",
            "review_shelf_id": "1131568006",
            "sortable": "false"
          }
        },
        {
          "$": {
            "exclusive": "false",
            "id": "125626640",
            "name": "read-2015",
            "review_shelf_id": "1131568009",
            "sortable": "false"
          }
        }
      ]
    },
    "spoiler_flag": "false",
    "spoilers_state": "none",
    "started_at": "Thu Nov 05 00:00:00 -0800 2015",
    "url": "https://www.goodreads.com/review/show/829021593",
    "user": {
      "display_name": "C.G. Drews",
      "has_image": "true",
      "id": "11375137",
      "image_url": "https://images.gr-assets.com/users/1521552918p3/11375137.jpg",
      "link": "https://www.goodreads.com/user/show/11375137-c-g-drews",
      "location": "Australia",
      "name": "C.G.",
      "small_image_url": "https://images.gr-assets.com/users/1521552918p2/11375137.jpg",
      "uri": "kca://profile:goodreads/A1UA9MBJBBHZ7P"
    },
    "user_statuses": {
      "user_status": [
        {
          "body": "EXcuSE Me I'M cRYYYYING. <br /> OMG.<br /> Who told me to read this series. WHO TOLD ME.<br /> I AM NOT OKAY.",
          "chapter": {
            "$": {
              "type": "integer"
            }
          },
          "comments_count": "19",
          "created_at": {
            "$": {
              "type": "datetime"
            },
            "_": "Sat Nov 14 18:25:29 -0800 2015"
          },
          "id": {
            "$": {
              "type": "integer"
            },
            "_": "80226975"
          },
          "last_comment_at": {
            "$": {
              "type": "datetime"
            }
          },
          "note_updated_at": {
            "$": {
              "type": "datetime"
            },
            "_": "Sat Nov 14 18:25:42 -0800 2015"
          },
          "note_uri": "kca://note/amzn1.grok.note.3b30ac4f27f717857326dff8e843ae64",
          "page": {
            "$": {
              "type": "integer"
            }
          },
          "percent": {
            "$": {
              "type": "integer"
            },
            "_": "90"
          },
          "ratings_count": {
            "$": {
              "type": "integer"
            },
            "_": "61"
          },
          "updated_at": {
            "$": {
              "type": "datetime"
            },
            "_": "Sat Nov 14 18:25:42 -0800 2015"
          },
          "work_id": {
            "$": {
              "type": "integer"
            },
            "_": "41335427"
          }
        },
        {
          "body": "Harry: QUieFRRRQ THERE ARE DEAD THINGS IN THE WATER !!!! QJSIQWQGRRRR<br /> Dumbledore: Oh really? It'll be fine, poppet. Just chill.",
          "chapter": {
            "$": {
              "type": "integer"
            }
          },
          "comments_count": "3",
          "created_at": {
            "$": {
              "type": "datetime"
            },
            "_": "Sat Nov 14 16:09:19 -0800 2015"
          },
          "id": {
            "$": {
              "type": "integer"
            },
            "_": "80220829"
          },
          "last_comment_at": {
            "$": {
              "type": "datetime"
            }
          },
          "note_updated_at": {
            "$": {
              "type": "datetime"
            },
            "_": "Sat Nov 14 16:09:24 -0800 2015"
          },
          "note_uri": "kca://note/amzn1.grok.note.70bf847f1fc3cd371118c076b39adecc",
          "page": {
            "$": {
              "type": "integer"
            }
          },
          "percent": {
            "$": {
              "type": "integer"
            },
            "_": "75"
          },
          "ratings_count": {
            "$": {
              "type": "integer"
            },
            "_": "48"
          },
          "updated_at": {
            "$": {
              "type": "datetime"
            },
            "_": "Sat Nov 14 16:09:24 -0800 2015"
          },
          "work_id": {
            "$": {
              "type": "integer"
            },
            "_": "41335427"
          }
        },
        {
          "body": "I TAKE IT ALL BACK. I AM BOARDING THE HARRY/GINNY SHIP AND I AM SAILING TILL DAWN. That was adorable. I was snort-giggling most obscenely in feelsy joy.",
          "chapter": {
            "$": {
              "type": "integer"
            }
          },
          "comments_count": "5",
          "created_at": {
            "$": {
              "type": "datetime"
            },
            "_": "Sat Nov 14 02:49:17 -0800 2015"
          },
          "id": {
            "$": {
              "type": "integer"
            },
            "_": "80184324"
          },
          "last_comment_at": {
            "$": {
              "type": "datetime"
            }
          },
          "note_updated_at": {
            "$": {
              "type": "datetime"
            },
            "_": "Sat Nov 14 02:49:29 -0800 2015"
          },
          "note_uri": "kca://note/amzn1.grok.note.6fa2ed62f21bd19192bd63cf3f55f46f",
          "page": {
            "$": {
              "type": "integer"
            }
          },
          "percent": {
            "$": {
              "type": "integer"
            },
            "_": "70"
          },
          "ratings_count": {
            "$": {
              "type": "integer"
            },
            "_": "41"
          },
          "updated_at": {
            "$": {
              "type": "datetime"
            },
            "_": "Sat Nov 14 02:49:29 -0800 2015"
          },
          "work_id": {
            "$": {
              "type": "integer"
            },
            "_": "41335427"
          }
        },
        {
          "body": "Otherwise titled: Harry Potter and The Book Where He's Utterly Obsessed With Draco Malfoy.",
          "chapter": {
            "$": {
              "type": "integer"
            }
          },
          "comments_count": "11",
          "created_at": {
            "$": {
              "type": "datetime"
            },
            "_": "Thu Nov 12 16:16:49 -0800 2015"
          },
          "id": {
            "$": {
              "type": "integer"
            },
            "_": "80093627"
          },
          "last_comment_at": {
            "$": {
              "type": "datetime"
            }
          },
          "note_updated_at": {
            "$": {
              "type": "datetime"
            },
            "_": "Thu Nov 12 16:16:55 -0800 2015"
          },
          "note_uri": "kca://note/amzn1.grok.note.39a527fd0636efc29edc4e98a9ef3a32",
          "page": {
            "$": {
              "type": "integer"
            }
          },
          "percent": {
            "$": {
              "type": "integer"
            },
            "_": "65"
          },
          "ratings_count": {
            "$": {
              "type": "integer"
            },
            "_": "79"
          },
          "updated_at": {
            "$": {
              "type": "datetime"
            },
            "_": "Thu Nov 12 16:16:55 -0800 2015"
          },
          "work_id": {
            "$": {
              "type": "integer"
            },
            "_": "41335427"
          }
        },
        {
          "body": "Okay, but RON IS A BULLY. He is a horrible bully and I don't see why this is okay?!?! He picks on First Years (he's constantly glowering/scaring/taking things from them/making them give up chairs to him) plus he's super rude to Hermione ALL. THE. TIME. Do not tell me that's love. That's <i>rudeness</i>. And he's self involved and...<br /> Basically NO TO RON.<br /> <br /> *ships Hermione and Harry quietly*",
          "chapter": {
            "$": {
              "type": "integer"
            }
          },
          "comments_count": "6",
          "created_at": {
            "$": {
              "type": "datetime"
            },
            "_": "Mon Nov 09 20:07:39 -0800 2015"
          },
          "id": {
            "$": {
              "type": "integer"
            },
            "_": "79888814"
          },
          "last_comment_at": {
            "$": {
              "type": "datetime"
            }
          },
          "note_updated_at": {
            "$": {
              "type": "datetime"
            },
            "_": "Mon Nov 09 20:07:42 -0800 2015"
          },
          "note_uri": "kca://note/amzn1.grok.note.d2de59ce8a354c01fa87b6d3596883a3",
          "page": {
            "$": {
              "type": "integer"
            }
          },
          "percent": {
            "$": {
              "type": "integer"
            },
            "_": "50"
          },
          "ratings_count": {
            "$": {
              "type": "integer"
            },
            "_": "33"
          },
          "updated_at": {
            "$": {
              "type": "datetime"
            },
            "_": "Mon Nov 09 20:07:42 -0800 2015"
          },
          "work_id": {
            "$": {
              "type": "integer"
            },
            "_": "41335427"
          }
        },
        {
          "body": "OKAY BUT NOBODY SPEAR ME BUT BUT...buuuut...<br /> I don't ship Hermione and Ron. Not even a little.<br /> *hides for ensuing horror*",
          "chapter": {
            "$": {
              "type": "integer"
            }
          },
          "comments_count": "20",
          "created_at": {
            "$": {
              "type": "datetime"
            },
            "_": "Sun Nov 08 20:51:53 -0800 2015"
          },
          "id": {
            "$": {
              "type": "integer"
            },
            "_": "79816255"
          },
          "last_comment_at": {
            "$": {
              "type": "datetime"
            }
          },
          "note_updated_at": {
            "$": {
              "type": "datetime"
            },
            "_": "Sun Nov 08 20:52:11 -0800 2015"
          },
          "note_uri": "kca://note/amzn1.grok.note.3a1a60b648bd292401af81161a3d3acf",
          "page": {
            "$": {
              "type": "integer"
            }
          },
          "percent": {
            "$": {
              "type": "integer"
            },
            "_": "13"
          },
          "ratings_count": {
            "$": {
              "type": "integer"
            },
            "_": "29"
          },
          "updated_at": {
            "$": {
              "type": "datetime"
            },
            "_": "Sun Nov 08 20:52:11 -0800 2015"
          },
          "work_id": {
            "$": {
              "type": "integer"
            },
            "_": "41335427"
          }
        },
        {
          "body": "*first chapters are all about dark wizards and evil*<br /> Next chapter: AND HERE IS HARRY! THE CHOSEN ONE! SNORING AND DROOLING ON THE WINDOW. WE ARE IN SAFE HANDS.",
          "chapter": {
            "$": {
              "type": "integer"
            }
          },
          "comments_count": "5",
          "created_at": {
            "$": {
              "type": "datetime"
            },
            "_": "Thu Nov 05 17:33:38 -0800 2015"
          },
          "id": {
            "$": {
              "type": "integer"
            },
            "_": "79596567"
          },
          "last_comment_at": {
            "$": {
              "type": "datetime"
            }
          },
          "note_updated_at": {
            "$": {
              "type": "datetime"
            },
            "_": "Thu Nov 05 17:33:40 -0800 2015"
          },
          "note_uri": "kca://note/amzn1.grok.note.7ee32cf9ddcbdb85ac926817a5991e65",
          "page": {
            "$": {
              "type": "integer"
            }
          },
          "percent": {
            "$": {
              "type": "integer"
            },
            "_": "9"
          },
          "ratings_count": {
            "$": {
              "type": "integer"
            },
            "_": "48"
          },
          "updated_at": {
            "$": {
              "type": "datetime"
            },
            "_": "Thu Nov 05 17:33:40 -0800 2015"
          },
          "work_id": {
            "$": {
              "type": "integer"
            },
            "_": "41335427"
          }
        }
      ]
    },
    "votes": "795"
  }
}